{"version":3,"file":"index.js","mappings":";;AAAA;AACA;AACA;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACNA;AACA;;;;;;;;ACDA;;;;;;;;;;;ACAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sources":["../webpack://nextlinux-harden-runner/webpack/bootstrap","../webpack://nextlinux-harden-runner/webpack/runtime/make namespace object","../webpack://nextlinux-harden-runner/webpack/runtime/compat","../webpack://nextlinux-harden-runner/external node-commonjs \"fs\"","../webpack://nextlinux-harden-runner/./src/cleanup.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\nif (typeof __webpack_require__ !== 'undefined') __webpack_require__.ab = __dirname + \"/\";","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"fs\");","import * as fs from \"fs\";\n\n(async () => {\n  if (process.platform !== \"linux\") {\n    console.log(\"Only runs on linux\");\n    return;\n  }\n\n  fs.writeFileSync(\n    \"/home/agent/post_event.json\",\n    JSON.stringify({ event: \"post\" })\n  );\n\n  var doneFile = \"/home/agent/done.json\";\n  var counter = 0;\n  while (true) {\n    if (!fs.existsSync(doneFile)) {\n      counter++;\n      if (counter > 30) {\n        console.log(\"timed out\");\n\n        break;\n      }\n      await sleep(1000);\n    } // The file *does* exist\n    else {\n      break;\n    }\n  }\n\n  var log = \"/home/agent/agent.log\";\n  console.log(\"log:\");\n  var content = fs.readFileSync(log, \"utf-8\");\n  console.log(content);\n  var status = \"/home/agent/agent.status\";\n  if (fs.existsSync(status)) {\n    console.log(\"status:\");\n    var content = fs.readFileSync(status, \"utf-8\");\n    console.log(content);\n  }\n})();\n\nfunction sleep(ms) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n}\n"],"names":[],"sourceRoot":""}